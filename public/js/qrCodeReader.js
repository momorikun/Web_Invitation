/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/qrCodeReader.js":
/*!**************************************!*\
  !*** ./resources/js/qrCodeReader.js ***!
  \**************************************/
/***/ (() => {

eval("var video = $(\"#camera\");\nvar canvas = $(\"#canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nwindow.onload = function () {\n  /** カメラ設定 */\n  var constraints = {\n    audio: false,\n    video: {\n      width: video.width,\n      height: video.height,\n      facingMode: \"user\" // フロントカメラを利用する\n\n    }\n  };\n  /**\r\n   * カメラを<video>と同期\r\n   */\n\n  navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n    video.srcObject = stream;\n\n    video.onloadedmetadata = function (e) {\n      video.play(); // QRコードのチェック開始\n\n      checkPicture();\n    };\n  })[\"catch\"](function (err) {\n    console.log(err.name + \": \" + err.message);\n  });\n};\n/**\r\n * QRコードの読み取り\r\n */\n\n\nfunction checkPicture() {\n  // カメラの映像をCanvasに複写\n  ctx.drawImage(video, 0, 0, canvas.width, canvas.height); // QRコードの読み取り\n\n  var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  var code = jsQR(imageData.data, canvas.width, canvas.height); //----------------------\n  // 存在する場合\n  //----------------------\n\n  if (code) {\n    // 結果を表示\n    setQRResult(\"#result\", code.data); // 文字列\n\n    drawLine(ctx, code.location); // 見つかった箇所に線を引く\n  } //----------------------\n  // 存在しない場合\n  //----------------------\n  else {\n    // 0.3秒後にもう一度チェックする\n    setTimeout(function () {\n      checkPicture();\n    }, 300);\n  }\n}\n/**\r\n * 発見されたQRコードに線を引く\r\n *\r\n * @param {Object} ctx\r\n * @param {Object} pos\r\n * @param {Object} options\r\n * @return {void}\r\n */\n\n\nfunction drawLine(ctx, pos) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    color: \"blue\",\n    size: 5\n  };\n  // 線のスタイル設定\n  ctx.strokeStyle = options.color;\n  ctx.lineWidth = options.size; // 線を描く\n\n  ctx.beginPath();\n  ctx.moveTo(pos.topLeftCorner.x, pos.topLeftCorner.y); // 左上からスタート\n\n  ctx.lineTo(pos.topRightCorner.x, pos.topRightCorner.y); // 右上\n\n  ctx.lineTo(pos.bottomRightCorner.x, pos.bottomRightCorner.y); // 右下\n\n  ctx.lineTo(pos.bottomLeftCorner.x, pos.bottomLeftCorner.y); // 左下\n\n  ctx.lineTo(pos.topLeftCorner.x, pos.topLeftCorner.y); // 左上に戻る\n\n  ctx.stroke();\n}\n/**\r\n * QRコードの読み取り結果を表示する\r\n *\r\n * @param {String} id\r\n * @param {String} data\r\n * @return {void}\r\n */\n\n\nfunction setQRResult(id, data) {\n  $(id).innerHTML = escapeHTML(data);\n}\n/**\r\n * jQuery style wrapper\r\n *\r\n * @param {string} selector\r\n * @return {Object}\r\n */\n\n\nfunction $(selector) {\n  return document.querySelector(selector);\n}\n/**\r\n * HTML表示用に文字列をエスケープする\r\n *\r\n * @param {string} str\r\n * @return {string}\r\n */\n\n\nfunction escapeHTML(str) {\n  var result = \"\";\n  result = str.replace(\"&\", \"&amp;\");\n  result = str.replace(\"'\", \"&#x27;\");\n  result = str.replace(\"`\", \"&#x60;\");\n  result = str.replace('\"', \"&quot;\");\n  result = str.replace(\"<\", \"&lt;\");\n  result = str.replace(\">\", \"&gt;\");\n  result = str.replace(/\\n/, \"<br>\");\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/qrCodeReader.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/qrCodeReader.js"]();
/******/ 	
/******/ })()
;